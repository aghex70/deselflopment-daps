version: '3.9'

services:
  backend:
    container_name: daps-backend
    build:
      context: backend
    command: ["air", "migrate", "&&", "air", "serve"]
    env_file:
      - backend/.env
    ports:
      - "18001:18001"
    depends_on:
      db:
        condition: service_healthy
    #      redis:
    #        condition: service_started
    volumes:
      - ./backend:/daps/backend
      - ./certbot/conf/:/etc/nginx/ssl/
    networks:
      database: {}

  asynq-worker:
    container_name: daps-worker
    build:
      context: backend
      dockerfile: Dockerfile
    command: ["air", "worker"]
    env_file:
      - backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/daps/backend
    networks:
      database: {}

  asynq-client:
    container_name: daps-client
    build:
      context: backend
      dockerfile: Dockerfile
    command: ["air", "client"]
    env_file:
      - backend/.env
    depends_on:
      redis:
        condition: service_started
      asynq-worker:
        condition: service_started
    volumes:
      - ./backend:/daps/backend

  db:
    container_name: deselflopment-db
    image: mysql:latest
    env_file:
      - backend/.env
    ports:
      - "13306:13306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "db", "-u $$MYSQL_ROOT_USER", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - deselflopment:/var/lib/deselflopment
      - ./backend/scripts/database-initialization.sh:/docker-entrypoint-initdb.d/setup.sql
    networks:
      database: {}

  redis:
    container_name: deselflopment-redis
    image: redis:alpine
    command: [redis-server, --port, "16379"]
    ports:
      - "16379:16379"
    networks:
      database: {}

  frontend:
    container_name: daps-frontend
    build:
      context: frontend
      dockerfile: Dockerfile-local
    env_file:
      - frontend/.env-dev
    command: ["npm", "run", "start:dev"]
    restart: always
    ports:
      - "13001:3000"
    depends_on:
      backend:
        condition: service_started
    stdin_open: true

  nginx:
    container_name: deselflopment-nginx
    image: nginx
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www/:/var/www/certbot
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"

#  certbot:
#    image: certbot/certbot
#    depends_on:
#      - nginx
#    command: >-
#        certonly --reinstall --webroot --webroot-path=/var/www/certbot
#        --email albertogarciaperez128@gmail.com --agree-tos --no-eff-email
#        -d deselflopment.com
#    volumes:
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot

volumes:
  deselflopment:

networks:
  database:
    external: true
