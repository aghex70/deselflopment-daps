version: '3.9'

services:
  backend:
    container_name: daps-backend
    build:
      context: backend
    command: ["air", "migrate", "&&", "air", "serve"]
    env_file:
      - backend/.env
    ports:
      - "18001:18001"
    depends_on:
      db:
        condition: service_healthy
#      redis:
#        condition: service_started
    volumes:
      - ./backend:/daps/backend
    networks:
      deselflopment-database-network: {}
      deselflopment-webserver-network: {}

#  asynq-worker:
#    container_name: daps-worker
#    build:
#      context: backend
#      dockerfile: Dockerfile
#    command: ["air", "worker"]
#    env_file:
#      - backend/.env
#    depends_on:
#      db:
#        condition: service_healthy
#      redis:
#        condition: service_started
#    volumes:
#      - ./backend:/daps/backend
#    networks:
#      deselflopment-database-network: {}
#
#  asynq-client:
#    container_name: daps-client
#    build:
#      context: backend
#      dockerfile: Dockerfile
#    command: ["air", "client"]
#    env_file:
#      - backend/.env
#    depends_on:
#      db:
#        condition: service_healthy
#      redis:
#        condition: service_started
#    volumes:
#      - ./backend:/daps/backend
#    networks:
#      deselflopment-database-network: {}

  db:
    container_name: deselflopment-db
    image: mysql:latest
    env_file:
      - backend/.env
    ports:
      - "13306:13306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "db", "-u $$MYSQL_ROOT_USER", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - deselflopment:/var/lib/mysql
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      deselflopment-database-network: {}

#  redis:
#    container_name: deselflopment-redis
#    image: redis:alpine
#    command: [redis-server, --port, "16379"]
#    ports:
#      - "16379:16379"
#    networks:
#      deselflopment-database-network: {}

  frontend:
    container_name: daps-frontend
    build:
      context: frontend
      dockerfile: Dockerfile-local
    env_file:
      - frontend/.env-dev
    ports:
      - "13001:3000"
    networks:
      deselflopment-webserver-network: {}
    stdin_open: true
    volumes:
      - ./frontend:/daps/frontend
      - /daps/frontend/node_modules

#  webserver:
#    container_name: deselflopment-nginx-local
#    image: nginx
#    volumes:
#      - ./nginx/conf/local.conf:/etc/nginx/conf.d/default.conf
#    ports:
#      - "80:80"
#      - "443:443"
#    depends_on:
#      - backend
#      - frontend
#    networks:
#      deselflopment-webserver-network: {}

volumes:
  deselflopment:

networks:
  deselflopment-database-network:
    external: true
  deselflopment-webserver-network:
    external: true
