version: '3.9'

services:
  daps-backend:
    build:
      context: backend
      dockerfile: Dockerfile
    command: ["air", "migrate", "&&", "air", "serve"]
    env_file:
      - backend/.env
    ports:
      - "80:11001"
#    expose:
#      - 11001
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/daps/backend

  db:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=dapsdb
      - MYSQL_USER=dapsuser
      - MYSQL_PASSWORD=root
      - MYSQL_TCP_PORT=11306
    ports:
      - "11306:11306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "db", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      -  mysql-db123:/var/lib/mysql-daps

  redis:
    image: redis:alpine
    command: [ redis-server, --port, "10379" ]


#  daps-frontend:
#    build:
#      context: frontend
#      dockerfile: Dockerfile
#    command: ["npm", "start"]
#    restart: always
#    ports:
#      - "13001:3000"
#    stdin_open: true
#    volumes:
#      - ./frontend:/daps/frontend

  nginx:
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/production:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - daps-backend
#  certbot:
#    image: certbot/certbot
#    restart: unless-stopped
#    volumes:
#      - ./nginx/certbot/conf:/etc/letsencrypt
#      - ./nginx/certbot/www:/var/www/certbot
#    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


volumes:
  mysql-db123: