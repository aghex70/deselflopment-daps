version: '3.9'

services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    command: ["air", "migrate", "&&", "air", "serve"]
    env_file:
      - backend/.env
    ports:
      - "11001:11001"
    depends_on:
      db:
        condition: service_healthy
#      redis:
#        condition: service_started
      frontend:
        condition: service_started
    volumes:
      - ./backend:/daps/backend

  db:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=dapsdb
      - MYSQL_USER=dapsuser
      - MYSQL_PASSWORD=root
      - MYSQL_TCP_PORT=11306
      - MYSQL_DEFAULT_AUTH=caching_sha2_password
    ports:
      - "11306:11306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "db", "-u$$MYSQL_USER", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      -  mysql-db123455:/var/lib/mysql-daps123455

#  redis:
#    image: redis:alpine
#    command: [ redis-server, --port, "10379" ]

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile-local
    env_file:
      - frontend/.dev.env
    command: ["npm", "run", "start:dev"]
    restart: always
    ports:
      - "3100:3000"
    stdin_open: true
#    volumes:
#      - ./frontend:/daps/frontend
#    depends_on:
#      - backend

  nginx:
    image: nginx
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
#  certbot:
#    image: certbot/certbot
#    volumes:
#      - ./data/certbot/conf:/etc/letsencrypt
#      - ./data/certbot/www:/var/www/certbot

volumes:
  mysql-db123455: